name: E2E tests

on:
  # Trigger the workflow on pull request,
  # but only for the main branch
  push:
    branches:
      - update/ci-di
  # Trigger the workflow on pull request,
  # but only for the main branch
  pull_request:
    branches:
      - main

jobs:
  e2e:  
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        php-versions: [ '7.2', '7.3', '7.4', '8.0' ]
        wp-versions: [ '5.0', '5.7' ]
        experimental: [ false ]
        include:
          - php-versions: '8.0'
            wp-versions: 'master'
            experimental: true
        exclude:
          - php-versions: '8.0'
            wp-versions: '5.0'
          - php-versions: '7.2'
            wp-versions: '5.0'
    name: WordPress ${{ matrix.wp-versions }} ( PHP ${{ matrix.php-versions }} )
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '14'
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('./package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install npm dependencies
      run: npm install
    - uses: actions/cache@v2
      with:
        path: ~/.wp-env
        key: ${{ runner.os }}-wp${{ matrix.wp-versions }}-php${{ matrix.php-versions }}-${{ hashFiles('./.wp-env.json') }}
    - name: Configure & setup wp-env
      run: |
        cat >>./.wp-env.override.json <<END
        {
          "core": "WordPress/WordPress#${{ matrix.wp-versions }}",
          "phpVersion": "${{ matrix.php-versions }}"
        }
        END
        npm run env:start
        npm run test:setup
    - name: Run E2E tests...
      run: npm run test:run