language: php

services:
  - mysql

php:
  - 7.4
  - 7.3
  - 7.2
  - 7.1
  - 7.0
 
# Test against the latest version of WordPress and one version back.
env:
  - WP_VERSION=latest WP_MULTISITE=0 WC_VERSION=4.1.1
  - WP_VERSION=5.3 WP_MULTISITE=0 WC_VERSION=4.0.0

# Customize the build matrix.
matrix:
  fast_finish: true
  include:
    # Run PHP_CodeSniffer
    - name: Coding standards
      php: 7.4
      env: WP_VERSION=latest WC_VERSION=latest
 
    # Canary for our oldest-supported version
    - name: Legacy
      php: 7.0
      env: WP_VERSION=5.0 WC_VERSION=3.9.0
 
    # Nightly versions of PHP and WordPress/WooCommerce.
    - name: Bleeding edge
      php: nightly
      env: WP_VERSION=trunk WC_VERSION=master
 
  # Jobs that are permitted to fail without breaking the build
  allow_failures:
    - name: Bleeding edge

before_script:
  - |
    if [[ ${TRAVIS_PHP_VERSION:0:3} == "7.0" ]]; then
      echo "downloading phpunit 6 and rename to phpunit.phar"
      wget https://phar.phpunit.de/phpunit-6.phar
      mv phpunit-6.phar phpunit.phar
    else
      echo "downloading phpunit 7 and rename to phpunit.phar"
      wget https://phar.phpunit.de/phpunit-7.phar
      mv phpunit-7.phar phpunit.phar
    fi
  - phpenv config-rm xdebug.ini
  - bash tests/bin/install.sh wc_korea_test root '' localhost $WP_VERSION
  - bash tests/bin/travis.sh before

script:
  - |
    php phpunit.phar -c phpunit.xml

#save node_modules to speed up build
cache:
  directories:
    - node_modules

after_script:
  - bash tests/bin/travis.sh after